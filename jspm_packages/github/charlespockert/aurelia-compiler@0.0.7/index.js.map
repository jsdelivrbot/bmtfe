{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index.js","sourceRoot":"/source/","sourcesContent":["import {ViewCompiler,CompositionEngine,ViewResources,ViewSlot,ViewEngine,Container} from 'aurelia-framework';\r\nimport {DefaultLoader} from 'aurelia-loader-default';\r\nimport {TemplateRegistryEntry} from 'aurelia-loader';\r\nimport {ContentSelector} from 'aurelia-templating';\r\n\r\n/**\r\n * Compiler service\r\n *\r\n * compiles an HTML element with aurelia\r\n */\r\nexport class Compiler {\r\n  static inject() {return [ViewCompiler, CompositionEngine,ViewEngine,ViewResources,Container,DefaultLoader]}\r\n  constructor(viewCompiler, compositionEngine,viewEngine, resources, container,loader) {\r\n    this.viewCompiler = viewCompiler;\r\n    this.viewEngine = viewEngine;\r\n    this.compositionEngine = compositionEngine;\r\n    this.resources = resources;\r\n    this.container = container;\r\n    this.loader = loader;\r\n  }\r\n\r\n  /**\r\n   * Loads in a new view for a VM and swaps it with the current view in the viewslot.\r\n   *\r\n   * The transormer receives an element and should return a string.\r\n   */\r\n  swapView(container,view,transformer){\r\n\r\n    let element = container.get(Element);\r\n    let behavior = element.primaryBehavior;\r\n\r\n    //store the original content in a document fragment\r\n    if(!behavior.originalFragment) {\r\n      var odata = element.innerHTML;\r\n      if(transformer) odata = transformer(element,element.innerHTML);\r\n      behavior.originalFragment = this.createFragment(odata);\r\n      //var orignalViewFactory = behavior.behavior.originalViewFactory = this.viewCompiler.compile(behavior.originalFragment, resources);\r\n      //behavior.originalView = orignalViewFactory.create(container,behavior.executionContext);\r\n    }\r\n\r\n    return this.loadTemplate(view).then(entry=>{\r\n      let template = entry.template;\r\n\r\n      var data = \"\";\r\n      for(var i = 0, l = template.content.children.length; i < l; i++){\r\n        var child = template.content.children[i];\r\n        if(child) data += child.outerHTML;\r\n      }\r\n\r\n      if(transformer) data = transformer(element,data);\r\n\r\n      //apply the template , clone the nodes as this is a template that is potentially used by many VMs\r\n      element.innerHTML = data;\r\n\r\n      return behavior;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Create a fragment from an HTMLElement or String\r\n   *\r\n   * @param element {HTMLElement|String}\r\n   * @return {DocumentFragment}\r\n   */\r\n  createFragment(element){\r\n    //create a new fragment from the current content to pass to the viewCompiler\r\n    var fragment = document.createDocumentFragment();\r\n\r\n    var c = document.createElement(\"div\");\r\n    c.innerHTML = (element instanceof HTMLElement)? element.innerHTML : element;\r\n\r\n    var currentChild = c.firstChild, nextSibling;\r\n    while(currentChild){\r\n      nextSibling = currentChild.nextSibling;\r\n      switch(currentChild.nodeType){\r\n        case 1:\r\n          fragment.appendChild(currentChild);\r\n          break;\r\n      }\r\n      currentChild = nextSibling;\r\n    }\r\n\r\n    return fragment;\r\n  }\r\n\r\n  /**\r\n   * Create a new View from an element's innerHTML and add swap it with current viewslot contents.\r\n   *\r\n   * @param container {Container}     DI container of the VM\r\n   * @param ctx {executionContext}    the execution context to bind to (will use the behavior's execution context by default)\r\n   *\r\n   * @return {BehaviorInstance}   The primary behavior associated with the element\r\n   */\r\n  processBehavior(container,ctx){\r\n    //get current element\r\n    var element = container.get(Element);\r\n\r\n    var behavior = element.primaryBehavior;\r\n\r\n    //skip if element doesn't have a behavior\r\n    if(!behavior) return;\r\n    //skip if element already has a viewFactory\r\n    if(behavior.viewFactory) return;\r\n\r\n    behavior.isAttached = false;\r\n\r\n    //get associated viewslot and resources\r\n    var viewSlot = container.get(ViewSlot);\r\n    var resources = container.get(ViewResources);\r\n\r\n    //var viewFactory = behavior.behavior.viewFactory;\r\n\r\n    //create a new viewFactory for the current element contents\r\n    var fragment = this.createFragment(element);\r\n\r\n    //clear targets in the current template\r\n    var targets = fragment.querySelectorAll('.au-target');\r\n    for(var i = 0, l = targets.length; i < l; i++){\r\n      var target = targets[i];\r\n      target.classList.remove('au-target');\r\n    }\r\n\r\n    //create a new ViewFactory and add it to the element's behavior\r\n    var viewFactory = behavior.behavior.viewFactory = this.viewCompiler.compile(fragment, resources);\r\n\r\n    //empty the current contents\r\n    element.innerHTML = \"\";\r\n\r\n    //create a view from the template and add it to the viewslot\r\n    var view = viewFactory.create(container,ctx||behavior.executionContext);\r\n    viewSlot.add(view);\r\n    viewSlot.attached();\r\n\r\n    //add view to the behavior\r\n    behavior.view = view;\r\n\r\n    //process contentSelectors\r\n    ContentSelector.applySelectors(\r\n      {fragment:behavior.originalFragment},\r\n      view.contentSelectors,\r\n      (contentSelector, group) => contentSelector.add(group)\r\n    );\r\n    behavior.contentView = behavior.originalView;\r\n\r\n    return behavior;\r\n  }\r\n\r\n  /**\r\n   * Compile an element\r\n   * the element should be available in the main resource registry or\r\n   * in the registry of the execution context passed as the second parameter.\r\n   *\r\n   * @param element {HTMLElement}     element to compile\r\n   * @param ctx {Object}              execution context\r\n   * @param viewSlot {ViewSlot}       viewslot to add the view to (if null a new one will be created)\r\n   * @param templateOrFragment {HTMLTemplateElement|DocumentFragment}\r\n   *        specify what content to use with the element (if null the element's content will be used)\r\n   *\r\n   * @returns {ViewSlot}\r\n   */\r\n  compile(element, ctx = null,viewSlot = null,templateOrFragment=null) {\r\n    element.classList.remove('au-target');\r\n\r\n    if(!templateOrFragment){\r\n      var templateOrFragment = document.createDocumentFragment();\r\n      var c = document.createElement(\"div\");\r\n      c.innerHTML = element.innerHTML;\r\n      templateOrFragment.appendChild(c);\r\n    }\r\n    var view = this.viewCompiler.compile(templateOrFragment, this.resources).create(this.container, ctx);\r\n\r\n    if(!viewSlot) viewSlot = new ViewSlot(element, true);\r\n\r\n    viewSlot.add(view);\r\n    viewSlot.attached();\r\n    return viewSlot;\r\n  }\r\n\r\n  //------------------ Composing instructions\r\n\r\n  /**\r\n   * compose an alement with a new instruction\r\n   *\r\n   * @param element         an HTMLElement where the instuction will be added to.\r\n   * @param instruction     the instruction to process\r\n   * @param ctx             an exectution context\r\n   * @returns {*}\r\n   */\r\n  composeElementInstruction(element,instruction,ctx) {\r\n    instruction.viewSlot = instruction.viewSlot ||new ViewSlot(element, true,ctx);\r\n    return this.processInstruction(ctx,instruction);\r\n  }\r\n\r\n  /**\r\n   * compose an existing behaviour with a new instruction\r\n   *\r\n   * @param container       the DI container of the behavior (the instruction will be added to it's element)\r\n   * @param instruction     the instruction to process\r\n   * @param ctx             the exectution context\r\n   * @returns {*}\r\n   */\r\n  composeBehaviorInstruction(container,instruction,ctx) {\r\n\r\n    //get current element\r\n    var element = container.get(Element);\r\n\r\n    var behavior = element.primaryBehavior;\r\n\r\n    element.innerHTML = \"\";\r\n\r\n    //skip if element doesn't have a behavior\r\n    if(!behavior) return;\r\n    var viewSlot = container.get(ViewSlot);\r\n\r\n    instruction.viewSlot = viewSlot;\r\n    instruction.viewModel = behavior;\r\n    var context = ctx||container.executionContext;\r\n    instruction.executionContext = context;\r\n\r\n    return this.processInstruction(context,instruction).then(viewFactory=>{\r\n      behavior.behavior.viewFactory = viewFactory;\r\n      viewSlot.bind(context)\r\n    });\r\n  }\r\n\r\n  //------------------ Loading helpers\r\n\r\n  /**\r\n   * Load a moduleId as plain text\r\n   *\r\n   * @param url      path to a view file\r\n   * @returns {String}\r\n   */\r\n  loadText(url){\r\n    return this.loader.loadText(url);\r\n  }\r\n\r\n  /**\r\n   * Load a moduleId as a view factory\r\n   *\r\n   * @param view      path to a view file\r\n   * @returns {ViewFactory}\r\n   */\r\n  loadViewFactory(view){\r\n    return this.viewEngine.loadViewFactory(view);\r\n  }\r\n\r\n  /**\r\n   * Load a template and return a view registry entry\r\n   *\r\n   * @param urlOrRegistryEntry\r\n   * @param associatedModuleId\r\n   * @returns {viewRegistryEntry}\r\n   */\r\n  loadTemplate(urlOrRegistryEntry, associatedModuleId){\r\n    return ensureRegistryEntry(this.loader, urlOrRegistryEntry).then(viewRegistryEntry => {\r\n      if(viewRegistryEntry.isReady){\r\n        return viewRegistryEntry.factory;\r\n      }\r\n\r\n      return this.viewEngine.loadTemplateResources(viewRegistryEntry, associatedModuleId).then(resources => {\r\n        if(viewRegistryEntry.isReady){\r\n          return viewRegistryEntry.factory;\r\n        }\r\n\r\n        viewRegistryEntry.setResources(resources);\r\n\r\n        return viewRegistryEntry;\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Loads in View and View Model resources and returns the registry entry for the VM\r\n   *\r\n   * @param moduleId\r\n   * @returns {Promise} return a registry entry\r\n   */\r\n  loadVM(moduleId){\r\n    var entry = this.loader.moduleRegistry[moduleId];\r\n    if(!entry){\r\n      return this.viewEngine.importViewResources([moduleId], [], this.resources).then(resources=>{\r\n        return this.viewEngine.importViewModelResource(moduleId);\r\n      });\r\n    }else{\r\n      return Promise.resolve(entry);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Process an instruction\r\n   * @param ctx\r\n   * @param instruction\r\n   * @returns {*}\r\n   */\r\n  processInstruction(ctx, instruction){\r\n\r\n    instruction.container = instruction.container||ctx.container||this.container;\r\n    instruction.executionContext = instruction.executionContext||ctx||this.executionContext;\r\n    instruction.viewSlot = instruction.viewSlot||ctx.viewSlot||this.viewSlot;\r\n    instruction.viewResources = instruction.viewResources||ctx.viewResources||this.viewResources;\r\n    instruction.currentBehavior = instruction.currentBehavior||ctx.currentBehavior||this.currentBehavior;\r\n\r\n    return this.compositionEngine.compose(instruction).then(next => {\r\n      ctx.currentBehavior = next;\r\n      ctx.currentViewModel = next ? next.executionContext : null;\r\n    });\r\n  }\r\n\r\n}\r\n\r\nfunction ensureRegistryEntry(loader, urlOrRegistryEntry){\r\n  if(urlOrRegistryEntry instanceof TemplateRegistryEntry){\r\n    return Promise.resolve(urlOrRegistryEntry);\r\n  }\r\n\r\n  return loader.loadTemplate(urlOrRegistryEntry);\r\n}\r\n"]}